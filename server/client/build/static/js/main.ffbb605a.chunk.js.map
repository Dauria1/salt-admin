{"version":3,"sources":["validator.js","saltlogo.svg","Components/StudentCard/StudentCard.jsx","Components/StudentList/StudentList.jsx","Components/Dashboard/commentBuilder.js","Components/Dashboard/performanceBuilder.js","Components/Student/Student.jsx","Components/NewStudent/ImageInput.js","Components/NewStudent/NewStudent.jsx","Components/Archive/archive.jsx","Components/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","index.js","Components/StudentCard/studentCard.scss","Components/Dashboard/formBuilder.js"],"names":["Joi","require","pNumber","module","exports","data","objectSchema","object","keys","vitalInfo","personNumber","string","alphanum","regex","required","firstName","lastName","phone","number","min","email","minDomainAtoms","address","image","comments","array","performance","validate","__webpack_require__","p","StudentCard","props","_this","Object","classCallCheck","this","_this$props$student$v","possibleConstructorReturn","getPrototypeOf","call","student","state","react_default","a","createElement","Fragment","className","Link","to","concat","includes","styles","studentImage","src","alt","Component","StudentList","students","filtered","query","updateSearch","bind","assertThisInitialized","setState","prevState","objectSpread","match","RegExp","escapeRegExp","searchStudents","filter","test","_this2","fetch","then","res","json","_this3","type","placeholder","value","onChange","event","target","length","map","Components_StudentCard_StudentCard","key","commentBuilder","comment","forEach","performanceBuilder","Student","isEditing","vitalInfoDrop","commentDrop","performanceDrop","deleteStudent","toggleState","submit","submitPerf","dropdown","id","params","e","FormData","form","JSON","stringify","method","body","headers","Content-Type","_this4","_this$state","name","_this5","redirect","handleFormSubmit","Redirect","pathname","onClick","onSubmit","entries","_ref","_ref2","slicedToArray","title","Math","random","defaultValue","person","user","lib_default","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","resizeImage","imageURL","canvas","maxHeight","Image","context","getContext","height","width","clearRect","drawImage","toDataURL","ImageInput","handleFileChange","files","originalURL","url","handleFormReset","document","fileInput","addEventListener","removeEventListener","_this$props","style","position","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","ref","node","top","left","opacity","React","NewStudent","handleNewSubmit","NewStudent_ImageInput","maxheight","Archive","trim","Dashboard","loggedIn","logout","preventDefault","formBuilder","output","validator","console","log","error","details","message","alert","location","cookies","childNodes","d","Date","setTime","getTime","set","path","expires","remove","get","es6","Route","exact","render","routeProps","Components_StudentList_StudentList","assign","Components_NewStudent_NewStudent","history","Components_Student_Student","archive","handleSubmit","withCookies","App","BrowserRouter","logo","Components_Dashboard_Dashboard","Boolean","window","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","names","getAll","values","i","obj","push","namesP","valuesP","nameP","split","splice"],"mappings":"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","file":"static/js/main.ffbb605a.chunk.js","sourcesContent":["const Joi = require('joi');\n\nconst pNumber = /^(19|20)?[0-9]{2}[- ]?((0[0-9])|(10|11|12))[- ]?(([0-2][0-9])|(3[0-1])|(([0-3][0-9])|(6[1-9])|(9[0-1])))[- ]?[0-9]{4}$/\n\nconst validator = (data) => {\n  const objectSchema = Joi.object().keys({\n    vitalInfo: {\n      personNumber: Joi.string().alphanum().regex(pNumber).required(),\n      firstName: Joi.string().required(),\n      lastName: Joi.string().required(),\n      phone: Joi.number().min(10).required(),\n      email: Joi.string().email({\n        minDomainAtoms: 2\n      }).required(),\n      address: Joi.string().required(),\n      image: Joi.string(),\n    },\n    comments: Joi.array(),\n    performance: Joi.array(),\n  });\n  return Joi.validate(data, objectSchema);\n};\n\nmodule.exports = validator;\n","module.exports = __webpack_public_path__ + \"static/media/saltlogo.ec74e59a.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './studentCard.scss';\n\nclass StudentCard extends Component {\n  constructor(props) {\n    super(props);\n    const { firstName, lastName, personNumber, image }\n      = this.props.student.vitalInfo;\n    this.state = {\n      firstName: firstName,\n      lastName: lastName,\n      personNumber: personNumber,\n      image: image,\n    };\n  }\n  render() {\n    return (\n      <>\n        <div className=\"studentCard\">\n          <Link to={`/students/${this.state.personNumber}`}>\n            {this.state.image.includes('base64') && \n              <img className={styles.studentImage} src={this.state.image} alt=\"avatar\" />\n            }\n            {this.state.image.includes('.jpeg') &&\n              <img className={styles.studentImage} src={`/assets/${this.state.image}`} alt=\"avatar\" />\n            }\n            <br />\n            <br />\n            {this.state.firstName}\n            <br />\n            {this.state.lastName}<br />\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default StudentCard;","import React, { Component } from 'react';\nimport StudentCard from '../StudentCard/StudentCard';\nimport { Link } from 'react-router-dom';\nimport './studentList.scss';\nimport escapeRegExp from 'escape-string-regexp';\n\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [],\n      filtered: [],\n      query: '',\n    };\n\n    this.updateSearch = this.updateSearch.bind(this);\n\n  }\n\n\n  updateSearch(query) {\n    const { students } = this.state;\n    const { filtered } = this.state;\n    this.setState(prevState => ({\n      ...prevState,\n      query: query,\n    }));\n    const match = new RegExp(escapeRegExp(query), 'i');\n    let searchStudents = students.filter((student) => match.test(student.vitalInfo.firstName));\n    this.setState(prevState => ({\n      ...prevState,\n      filtered: searchStudents,\n    }));\n  }\n\n\n  componentDidMount() {\n\n    fetch('/api/students')\n      .then(res => res.json())\n      .then(res =>\n        this.setState(prevState => ({\n          ...prevState,\n          students: res,\n        }))\n      );\n  }\n\n\n  render() {\n    const { query } = this.state;\n    const { students } = this.state;\n    const { filtered } = this.state;\n\n    return (\n      <>\n        <div className=\"header\">\n          <h1>List of Students</h1>\n          <input className=\"search-students\"\n            type=\"text\"\n            placeholder=\"  Search students\"\n            value={query}\n            onChange={(event) => this.updateSearch(event.target.value)}>\n          </input>\n          <div className=\"links\">\n            <Link className=\"newStudent\" to='/newStudent'>Add Student</Link>\n            <Link className=\"archivedStudents\" to='/archived'>Archived Students</Link>\n          </div>\n        </div>\n        <div>\n          {query.length == 0 ? (\n            <div className='grid'>\n\n              {students.map((student) => (\n                <StudentCard key={student.vitalInfo.personNumber} student={student} />\n              ))}\n            </div>\n          ) : (\n            <div className='grid'>\n              {filtered.map((student) => (\n                <StudentCard key={student.vitalInfo.personNumber} student={student} />\n              ))}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default StudentList;","function commentBuilder(data) {\n  let comment = {};\n  data.forEach((value, key) => {\n    if (key.includes('person')){\n      comment[key] = value;\n    } else if (key.includes('comments')) {\n      comment[key] = value;\n    }\n  });\n  return comment;\n}\n\nexport default commentBuilder;\n","function performanceBuilder(data) {\n  let performance = {};\n  data.forEach((value, key) => {\n    if (key.includes('title')) {\n      performance[key] = value;\n    } else if (key.includes('performance')) {\n      performance[key] = value;\n    }\n  });\n  return performance;\n}\n\nexport default performanceBuilder;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport TextareaAutosize from 'react-autosize-textarea';\nimport commentBuilder from \"../Dashboard/commentBuilder\";\nimport performanceBuilder from \"../Dashboard/performanceBuilder\";\nimport \"./student.scss\";\n\nclass Student extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vitalInfo: null,\n      comments: null,\n      performance: null,\n      isEditing: false,\n      vitalInfoDrop: false,\n      commentDrop: false,\n      performanceDrop: false,\n    };\n    this.deleteStudent = this.deleteStudent.bind(this);\n    this.toggleState = this.toggleState.bind(this);\n    this.submit = this.submit.bind(this);\n    this.submitPerf = this.submitPerf.bind(this);\n    this.dropdown = this.dropdown.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    fetch(`/api/students/${id}`)\n      .then(res => res.json())\n      .then(res =>\n        this.setState(prevState => ({\n          ...prevState,\n          vitalInfo: res.vitalInfo,\n          comments: res.comments,\n          performance: res.performance\n        }))\n      );\n  }\n\n  submit(e) {\n    const { match } = this.props;\n    const { id } = match.params;\n    const data = new FormData(e.target);\n    const form = JSON.stringify(commentBuilder(data));\n    fetch(`/api/students/${id}/comments`, {\n      method: \"PUT\",\n      body: form,\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then(() => {\n      this.setState(prevState => ({ ...prevState }));\n    });\n  }\n\n  submitPerf(e) {\n    const { match } = this.props;\n    const { id } = match.params;\n    const data = new FormData(e.target);\n    const form = JSON.stringify(performanceBuilder(data));\n    fetch(`/api/students/${id}/performance`, {\n      method: \"PUT\",\n      body: form,\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then(() => {\n      this.setState(prevState => ({ ...prevState }));\n    });\n  }\n\n  deleteStudent(id) {\n    fetch(`/api/students/${id}`, { method: \"DELETE\" });\n  }\n\n  toggleState() {\n    const { isEditing } = this.state;\n    this.setState({\n      isEditing: !isEditing\n    });\n  }\n\n  dropdown(e) {\n    const { vitalInfoDrop, commentDrop, performanceDrop } = this.state;\n    switch (e.target.name) {\n      case 'comments':\n        this.setState(prevState => ({ ...prevState, commentDrop: true }));\n        if (this.state.commentDrop === true) {\n          this.setState(prevState => ({ ...prevState, commentDrop: false }));\n        }\n        break;\n      case 'vitalInfo':\n        this.setState(prevState => ({ ...prevState, vitalInfoDrop: true }));\n        if (this.state.vitalInfoDrop === true) {\n          this.setState(prevState => ({ ...prevState, vitalInfoDrop: false }));\n        }\n        break;\n      case 'performances':\n        this.setState(prevState => ({ ...prevState, performanceDrop: true }));\n        if (this.state.performanceDrop === true) {\n          this.setState(prevState => ({ ...prevState, performanceDrop: false }));\n        }\n        break;\n      default:\n    }\n  }\n\n  render() {\n    const { match } = this.props;\n    const { id } = match.params;\n    const { redirect } = this.props;\n    const handleFormSubmit = this.props.handleFormSubmit;\n    if (redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { redirect: false }\n          }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <button className=\"editButton\" onClick={this.toggleState}>Edit</button>\n        <br />\n        {this.state.vitalInfo &&\n          this.state.vitalInfo.image.includes(\".jpeg\") && (\n            <img\n              className=\"studentImageEdit\"\n              src={`/assets/${this.state.vitalInfo.image}`}\n              alt=\"avatar\"\n            />\n          )}\n        <br />\n        <br />\n        {this.state.vitalInfo &&\n          this.state.vitalInfo.image.includes(\"base64\") && (\n            <img\n              className=\"studentImageEdit\"\n              src={`${this.state.vitalInfo.image}`}\n              alt=\"avatar\"\n            />\n          )}\n        <br />\n        <br />\n        {/* editing */}\n        {this.state.isEditing === true ? (\n          <form\n            onSubmit={(e, id) =>\n              handleFormSubmit(e, this.props.match.params.id)\n            }\n          >\n            <div className=\"vitalBoxEdit\">\n              <h3 className=\"boxName\">Vital Information:</h3>\n              <hr />\n              <br />\n              {this.state.vitalInfo &&\n                Object.entries(this.state.vitalInfo).map(([title, comment]) => (\n                  <>\n                    <label className=\"vitalLabel\" key={Math.random()}>{title}: </label>\n                    <input\n                      className=\"student-input\"\n                      key={Math.random()}\n                      type=\"text\"\n                      name={`vitalInfo.${title}`}\n                      defaultValue={comment}\n                    />\n                    <br />\n                  </>\n                ))}\n              <br />\n            </div>\n            <div className=\"commentBoxEdit\">\n              <h3 className=\"boxName\">Comments:</h3>\n              <hr />\n              <br />\n              {this.state.comments.length >= 1 &&\n                this.state.comments\n                  .map(comment => (\n                    <>\n                      <label\n                        className=\"vitalLabel\" \n                        key={Math.random()}>\n                        Person:\n                      </label>\n                      <input\n                        className=\"student-input\"\n                        key={Math.random()}\n                        type=\"text\"\n                        name=\"comment.person\"\n                        defaultValue={comment.person}\n                      />\n                      <br />\n                      <label\n                        className=\"vitalLabel\"\n                        key={Math.random()}>\n                        Comment:\n                      </label>\n                      <input\n                        className=\"student-input\"\n                        key={Math.random()}\n                        type=\"text\"\n                        name=\"comment.comments\"\n                        defaultValue={comment.comments}\n                      />\n                      <hr />\n                    </>\n                  ))}\n              <br />\n            </div>\n            <div className=\"perfBoxEdit\">\n              <h3 className=\"boxName\">Performance:</h3>\n              <hr />\n              <br />\n              {this.state.performance.length >= 1 &&\n                this.state.performance\n                  .map(performance => (\n                    <>\n                      <label \n                        className=\"vitalLabel\"\n                        key={Math.random()}>Title:</label>\n                      <input\n                        className=\"student-input\"\n                        key={Math.random()}\n                        type=\"text\"\n                        name=\"performance.title\"\n                        defaultValue={performance.title}\n                      />\n                      <br />\n                      <label \n                        className=\"vitalLabel\"\n                        key={Math.random()}>Comments:</label>\n                      <input\n                        className=\"student-input\"\n                        key={Math.random()}\n                        type=\"text\"\n                        name=\"performance.performance\"\n                        defaultValue={performance.performance}\n                      />\n                      <hr />\n                    </>\n                  ))}\n              <br />\n            </div>\n            <div className=\"bottomButtons\">\n              <button className=\"button\">Submit</button>\n              <Link\n                id=\"link\"\n                to=\"/\"\n                onClick={() => this.deleteStudent(id)}\n              >\n                Archive\n              </Link>\n            </div>\n          </form>\n\n\n\n\n\n        ) : (\n            <div className=\"render\">\n              <div className=\"vitalBox\">\n                <h3>Vital Information:</h3>\n            <input id=\"dropdown\" type=\"submit\" name=\"vitalInfo\" onClick={(e) => this.dropdown(e)} value=\"+\" />\n                <hr />\n\n                {this.state.vitalInfoDrop == false ? (\n                  <div />\n                ) : (\n                    <>\n                      Name:{\" \"}\n                      <span>\n                        {this.state.vitalInfo &&\n                          this.state.vitalInfo.firstName +\n                          \" \" +\n                          this.state.vitalInfo.lastName}\n                      </span>\n                      <br />\n                      Phone:{\" \"}\n                      <span>{this.state.vitalInfo && this.state.vitalInfo.phone}</span>\n                      <br />\n                      Email:{\" \"}\n                      <span>{this.state.vitalInfo && this.state.vitalInfo.email}</span>\n                      <br />\n                      personNumber:{\" \"}\n                      <span>\n                        {this.state.vitalInfo && this.state.vitalInfo.personNumber}\n                      </span>\n                      <br />\n                      Address:{\" \"}\n                      <span>{this.state.vitalInfo && this.state.vitalInfo.address}</span>\n                      <br />\n                      <br />\n                    </>\n                  )\n                }\n              </div>\n              <div className=\"commentBox\">\n                <h3>Comments:</h3>\n            <input id=\"dropdown\" type=\"submit\" name=\"comments\" onClick={(e) => this.dropdown(e)} value=\"+\" />\n                <hr />\n                {this.state.commentDrop == false ? (\n                  <form className=\"addStuff\" onSubmit={(e) => this.submit(e)}>\n                    <input type=\"text\" defaultValue={this.props.user} name=\"person\" />\n                    <TextareaAutosize className=\"textbox\" name=\"comments\" placeholder=\"Your comment here...\" />\n                    <input className=\"addButtonComm\" type=\"submit\" value=\"Add comment\" />\n                    <br />\n                  </form>\n                ) : (\n                    <>\n                      {this.state.vitalInfo &&\n                        this.state.comments\n                          .map(comment => (\n                            <>\n                              <li key={Math.random()}>\n                                {comment.person} : <span>{comment.comments}</span>\n                              </li>\n                            </>\n                          ))}\n                      <br />\n                      <form className=\"addStuff\" onSubmit={(e) => this.submit(e)}>\n                        <input type=\"text\" defaultValue={this.props.user} name=\"person\" />\n                        <TextareaAutosize className=\"textbox\" name=\"comments\" placeholder=\"Your comment here...\" />\n                        <input className=\"addButtonComm\" type=\"submit\" value=\"Add comment\" />\n                        <br />\n                      </form>\n                    </>\n                  )\n                }\n              </div>\n              <div className=\"perfBox\">\n                <h3>Performance:</h3>\n            <input id=\"dropdown\" type=\"submit\" name=\"performances\" onClick={(e) => this.dropdown(e)} value=\"+\" />\n                <hr />\n                {this.state.performanceDrop == false ? (\n                  <form className=\"addStuff\" onSubmit={(e) => this.submitPerf(e)}>\n                    <input type=\"text\" name=\"title\" placeholder=\"Title...\" />\n                    <TextareaAutosize className=\"textbox\" name=\"performance\" placeholder=\"Your comment here...\" />\n                    <input className=\"addButtonPerf\" type=\"submit\" value=\"Add performance\" />\n                    <br />\n                  </form>\n\n                ) : (\n                    <>\n                      {this.state.vitalInfo &&\n                        this.state.performance\n                          .map(performance => (\n                            <>\n                              <li key={Math.random()}>\n                                {performance.title} : <span>{performance.performance}</span>\n                              </li>\n                            </>\n                          ))}\n                      <br />\n                      <form className=\"addStuff\" onSubmit={(e) => this.submitPerf(e)}>\n                        <input type=\"text\" name=\"title\" placeholder=\"Title...\" />\n                        <TextareaAutosize className=\"textbox\" name=\"performance\" placeholder=\"Your comment here...\" />\n                        <input className=\"addButtonPerf\" type=\"submit\" value=\"Add performance\" />\n                        <br />\n                      </form>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Student;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst readFileAsDataURL = (file) =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  })\n\nconst resizeImage = (imageURL, canvas, maxHeight) =>\n  new Promise(resolve => {\n    const image = new Image()\n\n    image.onload = () => {\n      const context = canvas.getContext('2d')\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height\n        image.height = maxHeight\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height)\n      canvas.width = image.width\n      canvas.height = image.height\n\n      context.drawImage(image, 0, 0, image.width, image.height)\n\n      resolve(canvas.toDataURL('image/jpeg'))\n    }\n\n    image.src = imageURL\n  })\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\nclass ImageInput extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    maxHeight: PropTypes.number\n  }\n\n  state = {\n    value: ''\n  }\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0]\n\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(originalURL => {\n        resizeImage(originalURL, this.canvas, this.props.maxHeight).then(url => {\n          this.setState({ value: url })\n        })\n      })\n    } else {\n      this.setState({ value: '' })\n    }\n  }\n\n  handleFormReset = () => {\n    this.setState({ value: '' })\n  }\n\n  componentDidMount() {\n    this.canvas = document.createElement('canvas')\n    this.fileInput.form.addEventListener('reset', this.handleFormReset)\n  }\n\n  componentWillUnmount() {\n    this.fileInput.form.removeEventListener('reset', this.handleFormReset)\n  }\n\n  render() {\n    const { className, name } = this.props\n    const { value } = this.state\n\n    const style = {\n      position: 'relative'\n    }\n\n    if (value) {\n      style.backgroundImage = `url(\"${value}\")`\n      style.backgroundRepeat = 'no-repeat'\n      style.backgroundPosition = 'center'\n      style.backgroundSize = 'cover'\n    }\n\n    return (\n      <div className={className} style={style}>\n        <input type=\"hidden\" name={name} value={value} />\n        <input\n          ref={node => this.fileInput = node}\n          type=\"file\"\n          onChange={this.handleFileChange}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ImageInput","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ImageInput from './ImageInput';\nimport './newStudent.scss';\n\nclass NewStudent extends Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render(){\n    const { redirect, handleNewSubmit } = this.props;\n    if (redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { redirect: false }\n          }}\n        />\n      );\n    }\n      \n    return (\n      <>\n      <h1>New Student</h1>\n      <form className=\"newForm\" onSubmit={handleNewSubmit} >\n          <>\n          <ImageInput className=\"image\" name=\"image\" maxheight={64} required />\n          <br />\n            <label>\n              personNumber:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.personNumber\" placeholder=\"196302047365\" required/><br />\n            <br />\n            <label>\n              firstName:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.firstName\" placeholder=\"Sven\" required /><br />\n            <br />\n            <label>\n              lastName:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.lastName\" placeholder=\"Svensson\" required /><br />\n            <br />\n            <label>\n              phone:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.phone\" placeholder=\"0730204765\" required /><br />\n            <br />\n            <label>\n              email:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.email\" placeholder=\"sven@sven.com\" required /><br />\n            <br />\n            <label>\n              address:{' '}\n            </label>\n            <input type=\"text\" name=\"vitalInfo.address\" placeholder=\"13 Svennsgata\" required /><br />\n          </>\n          <button className=\"submitNew\">Submit</button>\n      </form>\n      </>\n    );\n  }\n}\n\nexport default NewStudent;","import React, { Component } from 'react';\nimport escapeRegExp from 'escape-string-regexp';\nimport StudentCard from '../StudentCard/StudentCard';\n\nclass Archive extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/archived')\n      .then(res => res.json())\n      .then(res =>\n        this.setState(prevState => ({\n          ...prevState,\n          students: res,\n        }))\n      );\n  }\n\n  updateSearch(query) {\n    this.setState({query: query.trim()});\n  }\n\n  render() {\n    const { students } = this.state;\n    const { query } = this.state;\n\n    let searchStudents;\n    if (this.state.query) {\n      const match = new RegExp(escapeRegExp(this.state.query), 'i');\n      searchStudents = students.filter((student) => match.test(student.vitalInfo.firstName))\n    } else {\n      searchStudents = students;\n    }\n\n    return (\n      <>\n        <h1>List of Students</h1>\n        <input className=\"search-students\"\n          type=\"text\"\n          placeholder=\"  Search students\"\n          value={query}\n          onChange={(event) => this.updateSearch(event.target.value)}>\n        </input>\n        <div className='grid'>\n          {searchStudents.map((student) => (\n            <StudentCard key={student[0]} student={student} />\n          ))}\n        </div>\n      </>);\n  }\n}\n\nexport default Archive;","import React, { Component } from 'react';\nimport StudentList from '../StudentList/StudentList';\nimport Student from '../Student/Student';\nimport NewStudent from '../NewStudent/NewStudent';\nimport Archive from '../Archive/archive.jsx';\nimport { Route, Link } from 'react-router-dom';\nimport { CookiesProvider, withCookies, } from 'react-cookie';\nimport './Dashboard.scss';\nimport formBuilder from './formBuilder';\nimport validator from '../../validator';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [],\n      loggedIn: false,\n      user: null,\n      redirect: false,\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleNewSubmit = this.handleNewSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  handleNewSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const form = JSON.stringify(formBuilder(data));\n    const output = validator(form);\n    console.log(output.error);\n    if (output.error !== null) {\n      console.log(output.error.details);\n      switch (true) {\n      case output.error.details[0].message.includes('personNumber'):\n        alert('Personal Number is not valid');\n        break;\n      case output.error.details[0].message.includes('firstName'):\n        alert('First name is not valid');\n        break;\n      case output.error.details[0].message.includes('lastName'):\n        alert('Last name is not valid');\n        break;\n      case output.error.details[0].message.includes('phone'):\n        alert('Phone number is not valid');\n        break;\n      case output.error.details[0].message.includes('email'):\n        alert('Email is not valid');\n        break;\n      case output.error.details[0].message.includes('address'):\n        alert('Address is not valid');\n        break;\n      default:\n        break;\n      }\n    } else {\n      fetch('/api/students', { method: 'POST', body: form, headers: { 'Content-Type': 'application/json' } })\n        .then(() => {\n          this.setState(prevState => ({ ...prevState, redirect: true }));\n        })\n        .then(() => {\n          this.setState(prevState => ({ ...prevState, redirect: this.props.location.state.redirect, students: [Math.random()]}));\n        });\n    }\n  }\n\n  handleSubmit(e) {\n    const { cookies } = this.props;\n    e.preventDefault();\n    if (e.target.childNodes[3].value === 'secret') {\n      let d = new Date();\n      d.setTime(d.getTime() * 60 * 1000);\n      this.setState(prevState => ({\n        ...prevState,\n        loggedIn: true,\n      })\n      );\n      cookies.set('user', `${e.target.childNodes[0].value}`, { path: '/', expires: d });\n    }\n  }\n\n  handleFormSubmit(e, id) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const form = JSON.stringify(formBuilder(data));\n    fetch(`/api/students/${id}`, { method: 'PUT', body: form, headers: { 'Content-Type': 'application/json' } })\n      .then(() => {\n        this.setState(prevState => ({ ...prevState, redirect: true }));\n      })\n      .then(() => {\n        this.setState(prevState => ({ ...prevState, redirect: this.props.location.state.redirect, students: []}));\n      });\n  }\n\n  logout() {\n    const { cookies } = this.props;\n    cookies.remove('user');\n    this.setState(prevState => ({ ...prevState, loggedIn: false, students: [Math.random()]}));\n  }\n\n  componentDidMount(){\n    const { cookies } = this.props;\n    if (cookies.get('user')) {\n      this.setState(prevState => ({\n        ...prevState,\n        loggedIn: true,\n      }));\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      user: cookies.get('user'),\n    }));\n\n  }\n\n\n  render() {\n    const { cookies } = this.props;\n    return (\n      <CookiesProvider>\n        {this.state.loggedIn === true &&\n        <>\n          <nav>\n            <Link to=\"/\" >Home </Link>\n            <span>Welcome {cookies.get('user')}</span>\n            <Link to=\"/\" onClick={this.logout}>LogOut </Link>\n          </nav> <hr />  \n        </>\n        }\n\n        <div className=\"contentbox\">\n          {this.state.loggedIn === false && !cookies.get('user') ? (\n            <div className=\"loginBox\">\n              <h1>Please sign in:</h1>\n              <form className=\"login\" onSubmit={e => this.handleSubmit(e)}>\n                <input className=\"user\" type=\"text\" placeholder=\"username\" /> <br />\n                <input className=\"password\" type=\"password\" placeholder=\"password\" /> <br />\n                <button className=\"login-button\">Login</button>\n              </form>\n            </div>\n          ) : (\n              <>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={routeProps => (\n                    <StudentList {...routeProps} redirect={this.state.redirect} />\n                  )}\n                />\n                <Route\n                  path=\"/newStudent\"\n                  render={routeProps => <NewStudent {...routeProps} handleNewSubmit={(e) => this.handleNewSubmit(e)} redirect={this.state.redirect} />}\n                />\n                <Route\n                  path=\"/students/:id\"\n                  render={(routeProps, history) => (\n                    <Student user={this.state.user} {...history} {...routeProps} handleFormSubmit={(e, id) => this.handleFormSubmit(e, id)} redirect={this.state.redirect} />\n                  )}\n                />\n                <Route\n                  path=\"/archived\"\n                  render={routeProps => <Archive {...routeProps} />}\n                />\n              </>\n          )}\n          \n        </div>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default withCookies(Dashboard);\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport logo from './saltlogo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Route\n              path=\"/\"\n              render={routeProps => (\n                <Dashboard className=\"dashboard\" {...routeProps} />\n              )}\n            />\n\n          </header>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"studentImage\":\"F9xMVaQxiEkSt86HShCYd\"};","function formBuilder(data) {\n  let vitalInfo = {};\n  let performance = [];\n  let comments = [];\n  const names = data.getAll('comment.person');\n  const values =  data.getAll('comment.comments');\n  names.forEach((name, i) => {\n    const obj = {};\n    obj.person = name;\n    obj.comments = values[i];\n    comments.push(obj);\n  });\n  const namesP = data.getAll('performance.title');\n  const valuesP =  data.getAll('performance.performance');\n  namesP.forEach((nameP, i) => {\n    const obj = {};\n    obj.title = nameP;\n    obj.performance = valuesP[i];\n    performance.push(obj);\n  });\n  data.forEach((value, key) => {\n    if (key.includes('vitalInfo')) {\n      vitalInfo[key.split('.').splice(1)] = value;\n    }\n    if(key.includes('image')){\n      vitalInfo.image = value;\n    }\n  });\n\n  const merged = Object.assign({}, {vitalInfo}, {comments}, {performance});\n  return merged;\n}\n\nmodule.exports = formBuilder;\n"],"sourceRoot":""}